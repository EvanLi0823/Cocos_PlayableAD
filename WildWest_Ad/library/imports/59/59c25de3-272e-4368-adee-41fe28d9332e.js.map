{"version":3,"sources":["assets/script/DestroyLocationScript.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAG5C;IAAmD,yCAAY;IAA/D;QAAA,qEAiCC;QA9BG,cAAQ,GAAY,IAAI,CAAC;QAEzB,iBAAW,GAAW,EAAE,CAAC,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QACjC,WAAK,GAAU,CAAC,CAAA;QAEhB,cAAQ,GAAY,IAAI,CAAC;;QAwBzB,iBAAiB;IACrB,CAAC;IAvBG,sCAAM,GAAN,cAAW,CAAC;IAEZ,qCAAK,GAAL;QAAA,iBAkBC;QAjBG,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC;QAE7B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,GAAG,GAAC,KAAK,CAAC;QAEnC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;aACd,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,OAAA,EAAE,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;aAC9E,KAAK,CAAC,GAAG,CAAC;aACV,IAAI,CAAC;YACF,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;YACxB,IAAG,KAAI,CAAC,QAAQ,EAAE;gBACd,KAAI,CAAC,QAAQ,EAAE,CAAC;aACnB;QACL,CAAC,CAAC;aACD,KAAK,EAAE,CAAA;IAEpB,CAAC;IA3BD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;2DACO;IAHR,qBAAqB;QADzC,OAAO;OACa,qBAAqB,CAiCzC;IAAD,4BAAC;CAjCD,AAiCC,CAjCkD,EAAE,CAAC,SAAS,GAiC9D;kBAjCoB,qBAAqB","file":"","sourceRoot":"/","sourcesContent":["\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class DestroyLocationScript extends cc.Component {\n\n    @property(cc.Node)\n    maskNode: cc.Node = null;\n\n    locationPos:cc.Vec2 = cc.v2(0,0);\n    width:number = 0\n\n    callback:Function = null;\n\n    onLoad() { }\n\n    start() {\n        let width = Math.sqrt((Math.pow(cc.winSize.width, 2) + Math.pow(cc.winSize.height, 2))); \n        this.maskNode.width = width;\n        this.maskNode.height = width;\n\n        let scale = this.width * 1.0/width;\n\n        cc.tween(this.maskNode)\n                .to(0.7, { scale, position: cc.v3(this.locationPos.x, this.locationPos.y, 0) })\n                .delay(0.2)\n                .call(()=> {\n                    this.maskNode.destroy();\n                    if(this.callback) {\n                        this.callback();\n                    }\n                })\n                .start()\n         \n    }\n\n    // update (dt) {}\n}\n"]}