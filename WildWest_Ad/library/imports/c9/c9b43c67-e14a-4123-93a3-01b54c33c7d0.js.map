{"version":3,"sources":["assets/script/DialogBase.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":[" \r\n\r\n// import EditorTool from \"./EditorTool\";\r\n\r\n\r\nconst { ccclass, property, disallowMultiple, menu } = cc._decorator;\r\n\r\n/**\r\n * 弹窗基类\r\n */\r\n@ccclass\r\n@disallowMultiple\r\n@menu('Framework/基础组件/DialogBase')\r\nexport default class DialogBase extends cc.Component {\r\n    /** 弹窗prefab在resources/prefab/dialog/下的路径 */\r\n    public static pUrl: string = '';\r\n\r\n    @property(cc.Animation)\r\n    public DlgAnim: cc.Animation = null;\r\n\r\n    @property({\r\n        type: cc.AnimationClip,\r\n        tooltip: CC_DEV && '打开弹窗的动画',\r\n        visible() { return !!this.DlgAnim; }\r\n    })\r\n    public OpenClip: cc.AnimationClip = null;\r\n\r\n    @property({\r\n        type: cc.AnimationClip,\r\n        tooltip: CC_DEV && '关闭弹窗的动画',\r\n        visible() { return !!this.DlgAnim; }\r\n    })\r\n    public CloseClip: cc.AnimationClip = null;\r\n\r\n    /** 外部的resolve函数，在弹窗close时调用 */\r\n    private _resolveList: Array<(value?: any) => void> = [];\r\n\r\n    private _prefabUrl: string = '';\r\n    /** 弹窗prefab在resources/prefab/dialog/下的路径 */\r\n    public get prefabUrl(): string { return this._prefabUrl; }\r\n\r\n    protected onDestroy(): void {\r\n        this.node.off(cc.Node.EventType.TOUCH_START , this.onTouchStart , this);\r\n        this.node.off(cc.Node.EventType.TOUCH_MOVE , this.onTouchMove , this);\r\n        this.node.off(cc.Node.EventType.TOUCH_END , this.onTouchEnd , this);\r\n        this.node.off(cc.Node.EventType.TOUCH_CANCEL , this.onTouchEnd , this);\r\n    }\r\n    protected onLoad(): void {\r\n        if (this.DlgAnim) {\r\n            this.OpenClip && this.DlgAnim.addClip(this.OpenClip);\r\n            this.CloseClip && this.DlgAnim.addClip(this.CloseClip);\r\n            this.DlgAnim.on(cc.Animation.EventType.FINISHED, this.onAnimFinished, this);\r\n        }\r\n\r\n        this.node.on(cc.Node.EventType.TOUCH_START , this.onTouchStart , this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE , this.onTouchMove , this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END , this.onTouchEnd , this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL , this.onTouchEnd , this);\r\n\r\n        \r\n    }\r\n    onTouchStart(e) {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    onTouchMove(e) {\r\n        e.stopPropagation()\r\n    }\r\n\r\n    onTouchEnd(e) {\r\n        e.stopPropagation()\r\n    }\r\n    // protected resetInEditor(): void {\r\n    //     if (CC_EDITOR) {\r\n    //         for (let i = 0; i < this.node.childrenCount; i++) {\r\n    //             let anim: cc.Animation = this.node.children[i].getComponent(cc.Animation);\r\n    //             if (anim) {\r\n    //                 this.DlgAnim = anim;\r\n    //                 EditorTool.load<cc.AnimationClip>('res/animation/dialog/open.anim').then((v) => { this.OpenClip = v; });\r\n    //                 EditorTool.load<cc.AnimationClip>('res/animation/dialog/close.anim').then((v) => { this.CloseClip = v; });\r\n    //                 break;\r\n    //             }\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    protected onAnimFinished(): void {\r\n        if (this.DlgAnim.currentClip === this.CloseClip) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开动画\r\n     */\r\n    public playOpen(): void {\r\n        if (this.DlgAnim && this.OpenClip) {\r\n            this.DlgAnim.play(this.OpenClip.name);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 关闭动画，动画结束回调中会调用close销毁\r\n     */\r\n    public playClose(): void {\r\n        if (this.DlgAnim && this.CloseClip) { \r\n            if (this.DlgAnim.getAnimationState(this.CloseClip.name).isPlaying) {\r\n                return;\r\n            }\r\n            this.DlgAnim.play(this.CloseClip.name);\r\n        } else {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 打开弹窗时的处理\r\n     * @virtual\r\n     */\r\n    public open(...args: any[]): any {\r\n    }\r\n\r\n    /**\r\n     * 关闭弹窗，销毁节点时的处理。\r\n     * - 必须使用此接口销毁，子类重写时请调用super.close()\r\n     * @virtual\r\n     */\r\n    public close(): any {\r\n        this._resolveList.forEach((resolve) => { resolve(); });\r\n        this.node.removeFromParent();\r\n        this.node.destroy();\r\n    }\r\n\r\n    /**\r\n     * 关闭按钮回调\r\n     * @virtual\r\n     */\r\n    protected onClickClose(): void {\r\n        this.playClose();\r\n    }\r\n\r\n    /**\r\n     * 添加外部resolve函数，在弹窗close时调用\r\n     */\r\n    // public addResolve(resolve: (value?: any) => void): void {\r\n        // Tool.arrayAdd(this._resolveList, resolve);\r\n    // }\r\n}\r\n"]}