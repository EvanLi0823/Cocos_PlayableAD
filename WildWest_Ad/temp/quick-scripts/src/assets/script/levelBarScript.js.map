{"version":3,"sources":["assets/script/levelBarScript.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2CAAsC;AACtC,uDAAkD;AAK5C,IAAA,KAAsB,EAAE,CAAC,UAAU,EAAlC,OAAO,aAAA,EAAE,QAAQ,cAAiB,CAAC;AAG1C;IAA4C,kCAAY;IAAxD;QAAA,qEAgCC;QA5BG,gBAAU,GAAe,IAAI,CAAC;QAG9B,sBAAgB,GAAY,IAAI,CAAC;;QAwBjC,iBAAiB;IACrB,CAAC;IAvBK,eAAe;IACjB,8BAAK,GAAL;QACI,IAAI,YAAY,GAAG,0BAAgB,CAAC,YAAY,EAAE,CAAC,aAAa,EAAE,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,mDAAiD,YAAY,uBAAoB,CAAC;QAC3G,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,oBAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,GAAG,GAAG,CAAA;IAC3E,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAK;QACV,IAAI,YAAY,GAAG,0BAAgB,CAAC,YAAY,EAAE,CAAC,aAAa,EAAE,CAAC;QACnE,IAAI,QAAQ,GAAG,YAAY,GAAG,KAAK,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,mDAAiD,QAAQ,uBAAoB,CAAC;QACvG,0BAAgB,CAAC,YAAY,EAAE,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAGD,mCAAU,GAAV;QACI,IAAI,YAAY,GAAG,0BAAgB,CAAC,YAAY,EAAE,CAAC,aAAa,EAAE,CAAC;QAEnE,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,mDAAiD,YAAY,uBAAoB,CAAC;IAE/G,CAAC;IAzBD;QADC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC;sDACQ;IAG9B;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;4DACc;IAPhB,cAAc;QADlC,OAAO;OACa,cAAc,CAgClC;IAAD,qBAAC;CAhCD,AAgCC,CAhC2C,EAAE,CAAC,SAAS,GAgCvD;kBAhCoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["import gameConfig from \"./gameConfig\";\nimport localDataManager from \"./localDataManager\";\nimport JsbSdkScript from \"./PlatformInteraction/JsbSdkScript\";\nimport GameManager from \"./qiuScript/GameManager\";\n\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class levelBarScript extends cc.Component {\n\n\n    @property(cc.RichText)\n    levelLabel:cc.RichText = null;\n\n    @property(cc.Label)\n    levelRemindLabel:cc.Label = null;\n\n      // onLoad () {}\n    start () {\n        let currentScore = localDataManager.shareManager().getScoreCount();\n        this.levelLabel.string = `<color=#FFFFFF><outline color=#CD4D00 width=2>${currentScore}</outline></color>`;\n        this.levelRemindLabel.string = gameConfig.getWord(\"score\").string + \"ï¼š\"\n    }\n\n    addScore(score){ \n        let currentScore = localDataManager.shareManager().getScoreCount();\n        let newScore = currentScore + score;\n        this.levelLabel.string = `<color=#FFFFFF><outline color=#CD4D00 width=2>${newScore}</outline></color>`;\n        localDataManager.shareManager().setScoreCount(newScore);\n    }\n\n\n    reSetState(){\n        let currentScore = localDataManager.shareManager().getScoreCount();\n\n        this.levelLabel.string = `<color=#FFFFFF><outline color=#CD4D00 width=2>${currentScore}</outline></color>`;\n\n    }\n\n    // update (dt) {}\n}"]}