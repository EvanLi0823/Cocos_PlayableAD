{"version":3,"sources":["assets/script/aduioTools.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import gameConfig from \"./gameConfig\";\nimport JsbSdkScript from \"./PlatformInteraction/JsbSdkScript\";\n\n\nexport enum engineType {\n    bingo = 0,\n    bingocool,\n    bingonice,\n    bingobang,\n    supperbingo,\n    fire,\n    finish_target,\n    merge,\n    pass,\n    reward,\n    girlLaugh,\n    endTurn,\n    sucess,\n    excellent\n\n}\n// const C3 = 130.81;\n// const c3d150 = 150 / C3;\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class aduioTools {\n    static backMusicIsPlay = null;\n\n    static playSimpleAduioEngine(eType: engineType) {\n        if (gameConfig.IS_GAME_MUSICEFFECT) {\n            let url: string = \"\";\n            switch (eType) {\n                case engineType.bingo:\n                    url = \"/AudioClip/sfx_combo_bingo\";\n                    break;\n                case engineType.bingocool:\n                    url = \"/AudioClip/sfx_combo_bingocool\";\n                    break;\n                case engineType.bingonice:\n                    url = \"/AudioClip/sfx_combo_bingonice\";\n                    break;\n                case engineType.bingobang:\n                    url = \"/AudioClip/sfx_combo_bingobang\";\n                    break;\n                case engineType.supperbingo:\n                    url = \"/AudioClip/sfx_combo_supperbingo\";\n                    break;\n                case engineType.fire:\n                    url = \"/AudioClip/sfx_fire\";\n                    break;\n                case engineType.finish_target:\n                    url = \"/AudioClip/sfx_finish_target\";\n                    break;\n                case engineType.merge:\n                    url = \"/AudioClip/sfx_merge\";\n                    break;\n                case engineType.girlLaugh:\n                    url = \"/AudioClip/sfx_girl_laugh\";\n                    break;\n                case engineType.pass:\n                    url = \"/AudioClip/sfx_combo_pass\";\n                    break;\n                case engineType.reward:\n                    url = \"/AudioClip/sfx_combo_reward\";\n                    break;\n                case engineType.endTurn:\n                    url = \"/AudioClip/sfx_end_turn\";\n                    break;\n                case engineType.sucess:\n                    url = \"/AudioClip/sfx_success\";\n                    break;\n                case engineType.excellent:\n                    url = \"/sounds/excellent\";\n                    break;\n                default:\n                    break;\n            }\n\n            if (url.length > 0) {\n                cc.resources.load(url, cc.AudioClip, (err, res) => {\n                    if (res) {\n                        let audioId = cc.audioEngine.playEffect(res as cc.AudioClip, false);\n                        if(url === \"/AudioClip/sfx_combo_pass\") {\n                            cc.audioEngine.setVolume(audioId , 0.5);\n                        }\n                    }\n                })\n            }\n        }\n    }\n\n    static playBackgroundMusic() {\n\n        // if (gameConfig.IS_GAME_MUSICBG) {\n\n        //     if (aduioTools.backMusicIsPlay == null) {\n        //         cc.resources.load('/AudioClip/bgm_1', cc.AudioClip, (err, res) => {\n        //             if (res) {\n\n        //                 aduioTools.backMusicIsPlay = cc.audioEngine.playMusic(res as cc.AudioClip, true);\n        //                 cc.audioEngine.setMusicVolume(0.5);\n        //             }\n        //         })\n        //     }\n        // }\n    }\n\n    static stopBackgroundMusic() {\n        if (aduioTools.backMusicIsPlay != null) {\n            cc.audioEngine.stopMusic();\n            aduioTools.backMusicIsPlay = null;\n        }\n    }\n\n    static playmerge(index: number) {\n        if (gameConfig.IS_GAME_MUSICEFFECT) {\n            if (cc.sys.os === cc.sys.OS_IOS || cc.sys.os === cc.sys.OS_ANDROID) {\n                JsbSdkScript.playMergeAudio(index);\n            }\n            else {\n\n                // let fs = require('fs');\n                // let AudioContext = window.AudioContext || window[\"webkitAudioContext\"];\n                // let audioCtx = AudioContext ? new AudioContext() : '';\n                // console.log(`AudioContext ${audioCtx}`);\n\n                // cc.resources.load(`AudioClip/sfx_merge`, cc.Asset, (err, res) => {\n                //     if (res) {\n\n                // fs.readFile(res.nativeUrl, (err, data) => {\n\n                // }\n                // )\n                //     }\n                // })\n\n\n                // const audioContext = new AudioContext();\n                // cc.resources.load(`AudioClip/sfx_merge`, cc.Asset, (err, res) => {\n                //     if (res) {\n                //         fetch(res.nativeUrl)\n                //             .then(response => response.arrayBuffer())\n                //             .then(\n                //                 arrayBuffer => audioContext.decodeAudioData(arrayBuffer)\n                //             )\n                //             .then(audioBuffer => {\n                //                 let sample = audioContext.createBufferSource();\n                //                 sample.buffer = audioBuffer;\n                //                 sample.loop = false;\n                //                 sample.playbackRate.value = 1 + 0.1 * index;\n                //                 sample.connect(audioContext.destination);\n                //                 sample.start();\n                //             })\n                //             .catch(e => console.log('uff'));\n                //     }\n                // })\n            }\n        }\n    }\n\n    static pauseAllEffect() {\n        cc.audioEngine.pauseAllEffects();\n    }\n\n    static resuseAllEffect() {\n        cc.audioEngine.resumeAllEffects();\n    }\n}\n"]}